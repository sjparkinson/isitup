name: Security

on:
  - push
  - pull_request

permissions: read-all

env:
  php-version: "8.2"
  php-extensions: ctype, curl, iconv, intl, json, pcre, session, simplexml, tokenizer

jobs:
  dependencies:
    name: Dependency Review
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
        with:
          persist-credentials: false

      - uses: actions/dependency-review-action@1360a344ccb0ab6e9475edef90ad2f46bf8003b1

  psalm:
    name: Psalm
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
        with:
          persist-credentials: false

      - name: Setup PHP with Composer and extensions
        uses: shivammathur/setup-php@4bd44f22a98a19e0950cbad5f31095157cc9621b
        with:
          php-version: ${{ env.php-version }}
          extensions: ${{ env.php-extensions }}

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer packages
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
        with:
          path: |
            ${{ steps.composer-cache.outputs.dir }}
            $HOME/.cache/psalm
          key: ${{ runner.os }}-security-psalm-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-security-psalm-

      - run: composer install --no-progress --ansi

      - name: Run Psalm security analysis
        run: php vendor/bin/psalm --taint-analysis --output-format=github --long-progress --report=psalm-results.sarif

      - name: Upload Psalm security analysis to GitHub
        uses: github/codeql-action/upload-sarif@46ed16ded91731b2df79a2893d3aea8e9f03b5c4
        with:
          sarif_file: psalm-results.sarif
