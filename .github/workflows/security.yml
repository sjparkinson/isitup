name: Security

on:
  - push
  - pull_request

permissions: read-all

env:
  php-version: "8.2"
  php-extensions: ctype, curl, iconv, intl, json, pcre, session, simplexml, tokenizer

jobs:
  dependencies:
    name: Dependency Review
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
        with:
          persist-credentials: false

      - uses: actions/dependency-review-action@6c5ccdad469c9f8a2996bfecaec55a631a347034

  psalm:
    name: Psalm
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
        with:
          persist-credentials: false

      - name: Setup PHP with Composer and extensions
        uses: shivammathur/setup-php@7fdd3ece872ec7ec4c098ae5ab7637d5e0a96067
        with:
          php-version: ${{ env.php-version }}
          extensions: ${{ env.php-extensions }}

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer packages
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84
        with:
          path: |
            ${{ steps.composer-cache.outputs.dir }}
            $HOME/.cache/psalm
          key: ${{ runner.os }}-security-psalm-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-security-psalm-

      - run: composer install --no-progress --ansi

      - name: Run Psalm security analysis
        run: php vendor/bin/psalm --taint-analysis --output-format=github --long-progress --report=psalm-results.sarif

      - name: Upload Psalm security analysis to GitHub
        uses: github/codeql-action/upload-sarif@0116bc2df50751f9724a2e35ef1f24d22f90e4e1
        with:
          sarif_file: psalm-results.sarif
