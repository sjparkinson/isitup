name: PHP

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions: read-all

env:
  php-version: '8.0'
  php-extensions: ctype, curl, iconv, intl, json, pcre, session, simplexml, tokenizer

jobs: 
  phpunit:
    name: PHPUnit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
        with:
          persist-credentials: false

      - name: Setup PHP, with Composer and extensions
        uses: shivammathur/setup-php@7854a0cae7fa7a5f3feac66d27bae2dc42d1067a
        with:
          php-version: ${{ env.php-version }}
          extensions: ${{ env.php-extensions }}

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer packages
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - run: composer validate --strict --ansi
      
      - name: Install Composer packages
        run: composer install --no-progress --ansi

      - run: composer test --ansi

  psalm:
    name: Psalm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
        with:
          persist-credentials: false

      - name: Setup PHP with Composer and extensions
        uses: shivammathur/setup-php@7854a0cae7fa7a5f3feac66d27bae2dc42d1067a
        with:
          php-version: ${{ env.php-version }}
          extensions: ${{ env.php-extensions }}

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer packages
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed
        with:
          path: |
            ${{ steps.composer-cache.outputs.dir }}
            $HOME/.cache/psalm
          key: ${{ runner.os }}-psalm-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-psalm-

      - run: composer install --no-progress --ansi

      - name: Run Psalm
        run: php vendor/bin/psalm --output-format=github --long-progress

  deploy:
    name: Deploy
    environment:
      name: production
      url: https://isitup.org
    concurrency: production
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs:
      - phpunit
      - psalm
    runs-on: ubuntu-latest
    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@1636b0e7124fef73b06321085ccfb34770ac31b3
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Create Apps Platform deployment
        id: deployment
        run: doctl apps create-deployment 7172ee3c-69f7-40cf-9bb4-ee712bbc7871 --force-rebuild --wait

      - name: Get build logs
        if: ${{ always() }}
        run: doctl apps logs 7172ee3c-69f7-40cf-9bb4-ee712bbc7871 --type build
