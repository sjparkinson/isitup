name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create GitHub deployment
        id: deployment
        uses: actions/github-script@0.9.0
        with:
          script: |
            const deployment = await github.repos.createDeployment({
              ...context.repo,
              ref: '${{ github.sha }}',
              environment: 'Production',
              required_contexts: [],
              mediaType: { previews: ['flash', 'ant-man'] }
            })

            return deployment.data.id;

      - name: Create GitHub deployment in progress status
        uses: actions/github-script@0.9.0
        with:
          script: |
            github.repos.createDeploymentStatus({
              ...context.repo,
              deployment_id: ${{ steps.deployment.outputs.result }},
              state: 'in_progress',
              log_url: 'https://github.com/${{ github.repository }}/commit/${{ github.sha }}/checks',
              mediaType: { previews: ['flash', 'ant-man'] }
            })

      - name: Install pack
        run: curl -sSL "https://github.com/buildpacks/pack/releases/download/v0.14.2/pack-v0.14.2-linux.tgz" | sudo tar -C /usr/local/bin/ --no-same-owner -xzv pack

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Run pack build
        run: |
          pack build --builder heroku/buildpacks --buildpack heroku/php \
            ghcr.io/${{ github.repository }}:${{ github.sha }}
        env:
          APP_ENV: prod

      - name: Run docker tag
        run: |
          docker tag \
          ghcr.io/${{ github.repository }}:${{ github.sha }} \
          ghcr.io/${{ github.repository }}:latest

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_CONTAINER_REGISTRY_TOKEN }}

      - name: Run docker push
        run: |
          docker push ghcr.io/${{ github.repository }}:${{ github.sha }}
          docker push ghcr.io/${{ github.repository }}:latest

      - run: doctl kubernetes cluster kubeconfig save k8s-lon1

      - name: Generate kustomize yaml files
        run: |
          cat >> k8s/kustomization.yaml <<EOF
          patchesStrategicMerge:
            - image.yaml
          EOF

          cat > k8s/image.yaml <<EOF
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: isitup-org
            annotations:
              kubernetes.io/change-cause: "updated to revision https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
          spec:
            template:
              spec:
                containers:
                  - name: isitup-org
                    image: ghcr.io/${{ github.repository }}:${{ github.sha }}
          EOF

      - run: kubectl apply -k k8s/

      - run: kubectl rollout status deployment/isitup-org --timeout=3m

      - name: Create GitHub deployment success status
        uses: actions/github-script@0.9.0
        if: success()
        with:
          script: |
            github.repos.createDeploymentStatus({
              ...context.repo,
              deployment_id: ${{ steps.deployment.outputs.result }},
              state: 'success',
              environment_url: 'https://isitup.org',
              auto_inactive: true,
              log_url: 'https://github.com/${{ github.repository }}/commit/${{ github.sha }}/checks',
              mediaType: { previews: ['flash', 'ant-man'] }
            })

      - name: Create GitHub deployment failure status
        uses: actions/github-script@0.9.0
        if: cancelled() || failure()
        with:
          script: |
            github.repos.createDeploymentStatus({
              ...context.repo,
              deployment_id: ${{ steps.deployment.outputs.result }},
              state: 'failure',
              log_url: 'https://github.com/${{ github.repository }}/commit/${{ github.sha }}/checks',
              mediaType: { previews: ['flash', 'ant-man'] }
            })
