# Copied from https://github.com/heroku/heroku-buildpack-php/blob/master/conf/nginx/heroku.conf.php.

http {
	include mime.types;
	default_type application/octet-stream;

	sendfile on;

	keepalive_timeout 65;

	server_tokens off;

	fastcgi_buffers 256 4k;

	# define an easy to reference name that can be used in fastgi_pass
	upstream heroku-fcgi {
		#server 127.0.0.1:4999 max_fails=3 fail_timeout=3s;
		server unix:/tmp/heroku.fcgi.8080.sock max_fails=3 fail_timeout=3s;
		keepalive 16;
	}

    limit_req_zone $binary_remote_addr zone=ip:10m rate=1r/s;

	server {
		# define an easy to reference name that can be used in try_files
		location @heroku-fcgi {
			include fastcgi_params;

			fastcgi_split_path_info ^(.+\.php)(/.*)$;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			# try_files resets $fastcgi_path_info, see http://trac.nginx.org/nginx/ticket/321, so we use the if instead
			fastcgi_param PATH_INFO $fastcgi_path_info if_not_empty;
			# pass actual request host instead of localhost
			fastcgi_param SERVER_NAME $host;

			if (!-f $document_root$fastcgi_script_name) {
				# check if the script exists
				# otherwise, /foo.jpg/bar.php would get passed to FPM, which wouldn't run it as it's not in the list of allowed extensions, but this check is a good idea anyway, just in case
				return 404;
			}

			fastcgi_pass heroku-fcgi;
		}

		server_name localhost;
		listen 8080;
		# FIXME: breaks redirects with foreman
		port_in_redirect off;

		root "/workspace/public/";

		error_log stderr;
		access_log /tmp/heroku.nginx_access.8080.log;

        # Use the client's IP address from the DO-Connecting-IP header.
        set_real_ip_from 10.0.0.0/8;
        real_ip_header DO-Connecting-IP;
        real_ip_recursive on;

        # Configure rate limiting.
        limit_req_status 429;
        limit_req zone=ip burst=10 nodelay;

        location / {
            try_files $uri /index.php$is_args$args;
        }

        location ~ ^/index\.php(/|$) {
            try_files @heroku-fcgi @heroku-fcgi;

            # Prevents URIs that include the front controller, e.g. http://domain.tld/index.php/some-path.
            # Remove the internal directive to allow URIs like this.
            internal;
        }

        # Return 404 for all other php files not matching the front controller
        # this prevents access to other php files you don't want to be accessible.
        location ~ \.php$ {
            return 404;
        }

        # Cache static assets.
        location ~ \.(css|ico)$ {
            gzip on;
            gzip_types text/plain text/css;
            add_header Cache-Control "max-age=31536000, public";
        }

		# restrict access to hidden files, just in case
		location ~ /\. {
			deny all;
		}

		# default handling of .php
		location ~ \.php {
			try_files @heroku-fcgi @heroku-fcgi;
		}
	}
}
